[{"/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/index.tsx":"1","/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/App.tsx":"2","/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/plugins/fetch-plugin.ts":"3","/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/plugins/unpkg-path-plugin.ts":"4","/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/components/CodeEditor/CodeEditor.tsx":"5"},{"size":260,"mtime":1679818121685,"results":"6","hashOfConfig":"7"},{"size":2329,"mtime":1679818101315,"results":"8","hashOfConfig":"7"},{"size":2322,"mtime":1679817076404,"results":"9","hashOfConfig":"7"},{"size":774,"mtime":1679800762617,"results":"10","hashOfConfig":"7"},{"size":2289,"mtime":1679820257629,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1339tnh",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/index.tsx",[],"/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/App.tsx",["22","23"],"/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/plugins/fetch-plugin.ts",["24"],"/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/plugins/unpkg-path-plugin.ts",["25"],"/Users/katoitta/Documents/Programming/projects/react-typescript-project/js-notebook/src/components/CodeEditor/CodeEditor.tsx",["26","27","28"],{"ruleId":"29","severity":1,"message":"30","line":9,"column":1,"nodeType":"31","messageId":"32","endLine":9,"endColumn":15},{"ruleId":"33","severity":1,"message":"34","line":28,"column":5,"nodeType":"35","messageId":"36","endLine":28,"endColumn":23,"suggestions":"37"},{"ruleId":"29","severity":1,"message":"30","line":9,"column":1,"nodeType":"31","messageId":"32","endLine":9,"endColumn":40},{"ruleId":"29","severity":1,"message":"30","line":3,"column":1,"nodeType":"31","messageId":"32","endLine":3,"endColumn":27},{"ruleId":"29","severity":1,"message":"30","line":15,"column":1,"nodeType":"31","messageId":"32","endLine":15,"endColumn":44},{"ruleId":"38","severity":1,"message":"39","line":16,"column":28,"nodeType":"40","messageId":"41","endLine":16,"endColumn":31,"suggestions":"42"},{"ruleId":"33","severity":1,"message":"34","line":25,"column":5,"nodeType":"35","messageId":"36","endLine":25,"endColumn":23,"suggestions":"43"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["44"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["45","46"],["47"],{"messageId":"48","fix":"49","desc":"50"},{"messageId":"51","fix":"52","desc":"53"},{"messageId":"54","fix":"55","desc":"56"},{"messageId":"48","fix":"57","desc":"50"},"suggestOptionalChain",{"range":"58","text":"59"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.","suggestUnknown",{"range":"60","text":"61"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"60","text":"62"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"63","text":"59"},[779,780],"?",[468,471],"unknown","never",[693,694]]